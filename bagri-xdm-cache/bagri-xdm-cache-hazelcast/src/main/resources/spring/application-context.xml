<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:hz="http://www.hazelcast.com/schema/spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/spring-security-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.hazelcast.com/schema/spring http://www.hazelcast.com/schema/spring/hazelcast-spring-3.2.xsd">

    <!-- Beans Declarations -->
    
	<context:property-placeholder location="classpath:/xdm-cache-server.properties" />
    <context:annotation-config />

    <!--bean id="jmx.server" class="org.springframework.jmx.support.MBeanServerFactoryBean"
                    p:locateExistingServerIfPossible="true"/-->
    <!--bean id="jmxServer" class="java.lang.management.ManagementFactory" factory-method="getPlatformMBeanServer"/-->
     
    <!--context:mbean-server /-->
    <bean id="mbeanServer" class="java.lang.management.ManagementFactory" factory-method="getPlatformMBeanServer"/>
    <context:mbean-export server="mbeanServer" default-domain="com.bagri.xdm"/>
    
<!-- 
    <context:mbean-server id="jmxServer"/>
    <context:mbean-export server="jmxServer" default-domain="com.bagri.xdm"/> registration="replaceExisting"
 -->
    
    <!-- JXM Authentication -->
    <util:constant id="jmx.auth.attribute" static-field="javax.management.remote.JMXConnectorServer.AUTHENTICATOR"/>

    <bean id="authManager" class="com.bagri.xdm.cache.hazelcast.security.BagriJMXAuthenticator">
        <property name="userManager" ref="userService"/>
    </bean>

    <!--util:map id="jmx.environment">
        <entry key-ref="jmx.auth.attribute" value-ref="jmx.authenticator"/>
    </util:map-->

    <!-- Needed to declare the following -->
    <!--bean id="jmx.registry" class="org.springframework.remoting.rmi.RmiRegistryFactoryBean">
        <property name="port" value="3333"/>
    </bean-->

    <!--bean id="jmx.server.connector" class="org.springframework.jmx.support.ConnectorServerFactoryBean"> 
    	< depends-on="jmx.registry" >
        <property name="server" ref="mbeanServer"/>
        <property name="objectName" value="connector:name=rmi"/>
        <property name="serviceUrl" value="service:jmx:rmi:///jndi/rmi://localhost:3333/jmxrmi"/>
        <property name="environmentMap">
        	<map>
        		<entry key-ref="jmx.auth.attribute" value-ref="authManager"/>
        	</map>
        </property>
    </bean-->

	<hz:hazelcast id="hzInstance">
		<hz:config>
			<hz:instance-name>hzInstance</hz:instance-name>
			<hz:group name="system" password="syspwd"/>
			<hz:properties>
				<hz:property name="hazelcast.jmx">true</hz:property>
				<hz:property name="hazelcast.jmx.detailed">true</hz:property>
				<hz:property name="hazelcast.logging.type">slf4j</hz:property>
				<hz:property name="xdm.cluster.admin.port">${xdm.cluster.admin.port}</hz:property>
				<hz:property name="xdm.cluster.node.name">${xdm.cluster.node.name}</hz:property>
				<hz:property name="xdm.cluster.node.role">${xdm.cluster.node.role}</hz:property>
				<hz:property name="xdm.cluster.node.schemas">${xdm.cluster.node.schemas}</hz:property>
			</hz:properties>
			<hz:network port="5701" port-auto-increment="true">
				<hz:join>
					<hz:multicast enabled="false"/>
					<hz:tcp-ip enabled="true">
						<hz:members>${xdm.cluster.address}</hz:members>
					</hz:tcp-ip>
				</hz:join>
			</hz:network>
			<hz:executor-service name="xdm-exec-pool" pool-size="${xdm.cache.threads.invocationScheme}" />

			<hz:map name="nodes">
			</hz:map>
			
			<hz:map name="schemas">
				<hz:map-store enabled="true" write-delay-seconds="10" 
					class-name="com.bagri.xdm.cache.hazelcast.store.XDMSchemaCacheStore">
					<!--implementation="schemaCacheStore"-->
					<hz:properties>
						<hz:property name="xdm.schemas.filename">${xdm.schemas.filename}</hz:property>
					</hz:properties>
				</hz:map-store>
			</hz:map>

			<hz:map name="users">
				<hz:map-store enabled="true" write-delay-seconds="10" 
					class-name="com.bagri.xdm.cache.hazelcast.store.XDMUserCacheStore">
					<hz:properties>
						<hz:property name="xdm.users.filename">${xdm.users.filename}</hz:property>
					</hz:properties>
				</hz:map-store>
			</hz:map>
			
			<!--hz:listeners>
				<hz:listener implementation="clusterService"/>
			</hz:listeners-->
			
			<hz:serialization>
				<hz:portable-factories>
					<hz:portable-factory factory-id="1" class-name="com.bagri.xdm.process.hazelcast.pof.XDMPortableFactory"/>
				</hz:portable-factories>
				<hz:serializers>
					<hz:serializer type-class="com.bagri.xdm.system.XDMNode" class-name="com.bagri.xdm.access.hazelcast.pof.XDMNodeSerializer"/>
					<hz:serializer type-class="com.bagri.xdm.system.XDMSchema" class-name="com.bagri.xdm.access.hazelcast.pof.XDMSchemaSerializer"/>
					<hz:serializer type-class="com.bagri.xdm.system.XDMUser" class-name="com.bagri.xdm.access.hazelcast.pof.XDMUserSerializer"/>
				</hz:serializers>
			</hz:serialization>
		</hz:config>
	</hz:hazelcast>

	<hz:map id="nodes" name="nodes" instance-ref="hzInstance"/>
	<hz:map id="schemas" name="schemas" instance-ref="hzInstance"/>
	<hz:map id="users" name="users" instance-ref="hzInstance"/>

	<hz:executorService id="sys-exec-pool" name="sys-exec-pool" instance-ref="hzInstance"/>

	<bean id="clusterService" class="com.bagri.xdm.cache.hazelcast.management.ClusterManagement">
		<constructor-arg ref="hzInstance" />
		<property name="nodeCache" ref="nodes"/>
	</bean>

	<bean id="schemaService" class="com.bagri.xdm.cache.hazelcast.management.SchemaManagement">
		<constructor-arg ref="hzInstance" />
		<property name="schemaCache" ref="schemas"/>
		<property name="defaultProperties">
			<props>
				<prop key="xdm.schema.password"></prop>
				<prop key="xdm.schema.ports">${xdm.schema.default.ports}</prop>
				<prop key="xdm.schema.ports.start">${xdm.schema.default.ports.start}</prop>
				<prop key="xdm.schema.members">${xdm.schema.default.members}</prop>
				<prop key="xdm.schema.thread.pool">${xdm.schema.default.thread.pool}</prop>
				<prop key="xdm.schema.store.type">${xdm.schema.default.store.type}</prop>
			</props>
		</property>
	</bean>

	<bean id="userService" class="com.bagri.xdm.cache.hazelcast.management.UserManagement">
		<constructor-arg ref="hzInstance" />
		<property name="userCache" ref="users"/>
		<!--property name="mbeanExporter" ref="mbeanExporter"/-->
	</bean>

</beans>
