<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:hz="http://www.hazelcast.com/schema/spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.hazelcast.com/schema/spring http://www.hazelcast.com/schema/spring/hazelcast-spring-3.3.xsd">

	<!-- Beans Declaration -->
    
	<context:property-placeholder location="file:${xdm.config.path}/${xdm.config.properties.file}" />
	<context:annotation-config />
<!--     
	<context:mbean-server id="localServer"/>
	<context:mbean-export server="localServer" default-domain="com.bagri.xdm" registration="replaceExisting"/>
 -->
	<context:mbean-export default-domain="com.bagri.xdm"/>
 
	<hz:hazelcast id="hzInstance">
		<hz:config>
			<hz:instance-name>hzInstance</hz:instance-name>
			<hz:group name="system" password="syspwd"/>
			<hz:properties>
				<hz:property name="hazelcast.jmx">true</hz:property>
				<hz:property name="hazelcast.jmx.detailed">true</hz:property>
				<hz:property name="hazelcast.logging.type">slf4j</hz:property>
				<!--hz:property name="hazelcast.partition.count">0</hz:property-->				
			</hz:properties>
			<hz:network port="5701" port-auto-increment="true">
				<hz:join>
					<hz:multicast enabled="false"/>
					<hz:tcp-ip enabled="true" connection-timeout-seconds="10">
						<hz:members>${xdm.cluster.members}</hz:members>
					</hz:tcp-ip>
				</hz:join>
			</hz:network>
			<!--hz:partition-group enabled="true" group-type="CUSTOM">
				<hz:member-group>
					<hz:interface>192.168.1.87:5701</hz:interface>
				</hz:member-group>
				<hz:member-group>
					<hz:interface>192.168.1.*</hz:interface>
				</hz:member-group>
			</hz:partition-group-->
			<hz:executor-service name="xdm-exec-pool" pool-size="${xdm.cache.threads.invocationScheme}" />

			<!--hz:map name="nodes">
				<hz:map-store enabled="true" write-delay-seconds="10" implementation="nodeCacheStore"/>
			</hz:map>
			
			<hz:map name="schemas">
				<hz:map-store enabled="true" write-delay-seconds="10" implementation="schemaCacheStore"/>
			</hz:map>

			<hz:map name="roles">
				<hz:map-store enabled="true" write-delay-seconds="10" implementation="roleCacheStore"/>
			</hz:map>
			
			<hz:map name="users">
				<hz:map-store enabled="true" write-delay-seconds="10" implementation="userCacheStore"/>
			</hz:map-->
			
			<!--hz:listeners>
				<hz:listener implementation="clusterService"/>
			</hz:listeners-->
			
			<hz:serialization>
				<hz:data-serializable-factories>
					<hz:data-serializable-factory factory-id="2" class-name="com.bagri.xdm.process.hazelcast.pof.XDMDataSerializationFactory"/>
				</hz:data-serializable-factories>
				<hz:portable-factories>
					<hz:portable-factory factory-id="1" class-name="com.bagri.xdm.process.hazelcast.pof.XDMPortableFactory"/>
				</hz:portable-factories>
				<hz:serializers>
					<hz:serializer type-class="com.bagri.xdm.system.XDMNode" class-name="com.bagri.xdm.access.hazelcast.pof.XDMNodeSerializer"/>
					<hz:serializer type-class="com.bagri.xdm.system.XDMSchema" class-name="com.bagri.xdm.access.hazelcast.pof.XDMSchemaSerializer"/>
					<hz:serializer type-class="com.bagri.xdm.system.XDMRole" class-name="com.bagri.xdm.access.hazelcast.pof.XDMRoleSerializer"/>
					<hz:serializer type-class="com.bagri.xdm.system.XDMUser" class-name="com.bagri.xdm.access.hazelcast.pof.XDMUserSerializer"/>
					<hz:serializer type-class="com.bagri.xdm.system.XDMPermission" class-name="com.bagri.xdm.access.hazelcast.pof.XDMPermissionSerializer"/>
				</hz:serializers>
			</hz:serialization>
			<hz:member-attributes>
				<hz:attribute name="xdm.cluster.node.name">${xdm.cluster.node.name}</hz:attribute>
				<hz:attribute name="xdm.cluster.node.role">server</hz:attribute>
				<hz:attribute name="xdm.cluster.node.schemas">${xdm.cluster.node.schemas}</hz:attribute>
			</hz:member-attributes>
		</hz:config>
	</hz:hazelcast>

	<!--hz:map id="nodes" name="nodes" instance-ref="hzInstance"/>
	<hz:map id="schemas" name="schemas" instance-ref="hzInstance"/>
	<hz:map id="roles" name="roles" instance-ref="hzInstance"/>
	<hz:map id="users" name="users" instance-ref="hzInstance"/-->

	<hz:executorService id="sys-exec-pool" name="sys-exec-pool" instance-ref="hzInstance"/>

</beans>